{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/Scene.vue?b9e1","webpack:///./src/App.vue?7fbe","webpack:///./src/App.vue","webpack:///./src/App.vue?dfb6","webpack:///./src/views/Home.vue","webpack:///./src/components/Scene.vue","webpack:///./src/hooks/createScene.ts","webpack:///./src/hooks/addLights.ts","webpack:///./src/hooks/addBackground.ts","webpack:///./src/hooks/postProduction.ts","webpack:///./src/hooks/addLoaderManager.ts","webpack:///./src/hooks/addBuilding.ts","webpack:///./src/hooks/mouseRaycaster.ts","webpack:///./src/hooks/addClickableMockup.ts","webpack:///./src/hooks/addSprites.ts","webpack:///./src/components/Scene.vue?87b2","webpack:///./src/components/Scene.vue?53da","webpack:///./src/views/Home.vue?d5e7","webpack:///./src/views/Home.vue?ab8c","webpack:///./src/router/index.ts","webpack:///./src/store/index.ts","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","id","script","render","class","ref","changeCamera","currentCamera","loading","loaded","total","progress","sceneClick","closeAnnotation","currentSelected","createScene","sceneRef","scene","renderer","antialias","camera","camAndControls","global","fov","aspect","clientWidth","clientHeight","innerWidth","innerHeight","near","far","position","controls","enableDamping","dampingFactor","screenSpacePanning","minDistance","maxDistance","maxPolarAngle","Math","PI","enablePan","position0","target","enableKeys","keyPanSpeed","enableZoom","person","control","OrbitControls","domElement","animation","animateFunctions","rendererFunctions","sceneClickFunctions","clock","onWindowResize","updateProjectionMatrix","setSize","forEach","func","setCamControlsSettings","cameraSettings","keys","set","x","y","z","controlsSettings","startCamera","endCamera","duration","enableRotate","targets","easing","complete","saveStartTarget","console","log","appendChild","addEventListener","animate","requestAnimationFrame","update","getDelta","forceContextLoss","addLights","ambientLight","mainLight","add","addBackground","textureLoader","groundTexture","load","wrapS","wrapT","repeat","anisotropy","encoding","groundMaterial","map","mesh","rotation","receiveShadow","background","fog","postProduction","composer","EffectComposer","renderPass","RenderPass","addPass","pass","SMAAPass","getPixelRatio","addLoaderManager","manager","onProgress","item","round","addBuilding","loader","buildingPath","dracoLoader","DRACOLoader","setDecoderPath","setDRACOLoader","gltf","model","undefined","error","mouseRaycaster","raycaster","touchScreen","mouse","onCursorMoveFunctions","onCursorMove","event","changedTouches","clientX","clientY","setFromCamera","document","documentElement","addClickableMockup","selectable","annotationRef","mockupPath","currentHover","resetOpacity","index","findIndex","material","opacity","mockupToClick","mockupToRaycast","intersects","intersectObjects","transparent","toString","updateAnnotationPosition","vector","clone","canvas","project","width","devicePixelRatio","height","style","top","left","children","color","addSprites","currentSelectedSprite","sprites","addedSprites","drawNumber","number","createElement","radius","startAngle","endAngle","ctx","getContext","fillStyle","beginPath","arc","fill","strokeStyle","lineWidth","stroke","font","textAlign","textBaseline","fillText","addSprite","numberTexture","spriteMaterialFront","spriteMaterialBack","depthTest","spriteFront","spriteBack","copy","userData","frontID","backID","addAllSprites","spritesToRaycast","spritesIntersects","moveCameraToPosition","newPosition","oncomplete","currentAngle","getAzimuthalAngle","maxAzimuthAngle","minAzimuthAngle","distance","distanceTo","offset","newPositionX","newPositionY","newPositionZ","distanceX","distanceY","distanceZ","newX","newY","newZ","Infinity","spritesToClick","setup","GLTFLoader","__scopeId","components","Scene","routes","path","component","router","history","state","mutations","actions","App","use","store","mount"],"mappings":"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","file":"js/app.9313cbf8.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/developer3d-test/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export { default } from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Scene.vue?vue&type=style&index=0&id=232eb97b&scoped=true&lang=scss\"; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Scene.vue?vue&type=style&index=0&id=232eb97b&scoped=true&lang=scss\"","export { default } from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&lang=scss\"; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&lang=scss\"","<template>\n    <div id=\"app\">\n        <router-view />\n    </div>\n</template>\n\n<style lang=\"scss\">\nbody {\n    margin: 0;\n}\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=731e4770\"\nconst script = {}\n\nimport \"./App.vue?vue&type=style&index=0&lang=scss\"\nscript.render = render\n\nexport default script","<template>\n    <Scene />\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from 'vue-class-component';\nimport Scene from '../components/Scene.vue';\n\n@Options({\n  components: {\n    Scene,\n  },\n})\nexport default class Home extends Vue {}\n</script>\n","<template v-cloak>\r\n    <div class=\"container\">\r\n        <div class=\"return\">\r\n            <!-- <router-link to=\"/flatscene\">FLAT</router-link> -->\r\n            <div class=\"change-camera\" v-on:click=\"changeCamera(currentCamera, currentCamera === 'global' ? 'person' : 'global', 1500)\">Change camera: {{ currentCamera }}</div>\r\n        </div>\r\n\r\n        <div class=\"preloader\" v-show=\"loading.progress < 100\">\r\n            <div>\r\n                Ładowanie\r\n                <span v-show=\"loading.total\">{{ loading.loaded }}/{{ loading.total }}</span>\r\n            </div>\r\n            <div v-show=\"loading.total\">{{ loading.progress }}%</div>\r\n        </div>\r\n\r\n        <div class=\"scene\" ref=\"sceneRef\" v-on:click=\"sceneClick\" v-on:touchstart=\"sceneClick\"></div>\r\n\r\n        <div class=\"annotation\" ref=\"annotationRef\" v-show=\"currentSelected\">\r\n            <div class=\"annotation-content\">\r\n                <div class=\"annotation-close\" v-on:click=\"closeAnnotation()\">x</div>\r\n                <div class=\"annotation-title\">Id mieszkania: {{ currentSelected }}</div>\r\n                <div class=\"annotation-desc\">\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam gravida massa odio, vitae accumsan mauris rutrum sed. Curabitur venenatis quam risus, sed rutrum magna cursus nec.\r\n                    Fusce viverra ultricies nulla, et ultricies turpis. In eu mi eget velit sagittis tempus in non tortor.\r\n                </div>\r\n                <!-- <div class=\"annotation-button\" v-on:click=\"clickCurrentSelected()\">Zobacz mieszkanie</div> -->\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { ref } from 'vue'\r\nimport * as THREE from 'three';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport { Mesh } from 'three';\r\n\r\n// Import hooks\r\nimport createScene from '../hooks/createScene';\r\nimport addLights from '../hooks/addLights';\r\nimport addBackground from '../hooks/addBackground';\r\nimport postProduction from '../hooks/postProduction';\r\nimport addLoaderManager from '../hooks/addLoaderManager';\r\nimport addBuilding from '../hooks/addBuilding';\r\nimport mouseRaycaster from '../hooks/mouseRaycaster';\r\nimport addClickableMockup from '../hooks/addClickableMockup';\r\nimport addSprites from '../hooks/addSprites';\r\n\r\nexport default {\r\n    setup() {\r\n        // Dodaj scenę\r\n        const sceneRef = ref(null);\r\n        const {\r\n            scene,renderer, camera, currentCamera,\r\n            changeCamera, control, rendererFunctions,\r\n            animation, sceneClick, sceneClickFunctions, camAndControls\r\n        } = createScene(sceneRef);\r\n\r\n        // Pokaż osie x,y,z\r\n        scene.add(new THREE.AxesHelper(100));\r\n\r\n        // Dodaj światło\r\n        addLights(scene)\r\n\r\n        // Dodaj tło\r\n        addBackground(scene)\r\n\r\n        // Dodaj postprodukcję\r\n        postProduction(scene, camera, currentCamera, renderer)\r\n\r\n        // Dodaj manager ładowania\r\n        const manager = new THREE.LoadingManager();\r\n        const { loading } = addLoaderManager(manager)\r\n\r\n        // Załaduj budynek\r\n        const loader = new GLTFLoader(manager);\r\n        addBuilding(loader, scene, 'develop_house/untitledDraco.gltf')\r\n        //addBuilding(loader, scene, 'develop_house/modelDraco.gltf')\r\n\r\n        // Funkcje raycastera\r\n        const raycaster = new THREE.Raycaster();\r\n        const { onCursorMoveFunctions } = mouseRaycaster(raycaster, camera)\r\n\r\n        // Załaduj klikalny obiekt\r\n        const selectable: Mesh[] = [];\r\n        const annotationRef = ref(null)\r\n        const {\r\n            currentSelected, mockupToRaycast, mockupToClick,\r\n            updateAnnotationPosition, closeAnnotation\r\n        } = addClickableMockup(loader, scene, renderer, camera, currentCamera, selectable, annotationRef, 'develop_house/sciana.gltf')\r\n\r\n        onCursorMoveFunctions.push(mockupToRaycast)\r\n        sceneClickFunctions.push(mockupToClick)\r\n        rendererFunctions.push(updateAnnotationPosition)\r\n\r\n        // Dodaj klikalne punkty\r\n        const { spritesToRaycast, spritesToClick } = addSprites(scene, camera, control, animation)\r\n        onCursorMoveFunctions.push(spritesToRaycast)\r\n        sceneClickFunctions.push(spritesToClick)\r\n\r\n        return {\r\n            sceneRef, annotationRef, changeCamera,\r\n            currentCamera, closeAnnotation, currentSelected,\r\n            sceneClick, loading, camAndControls\r\n        }\r\n    }\r\n}\r\n\r\n// 1. Ustawić jedną kamerę i jeden kontroler\r\n// 2. Utworzyc obiekt z ustawieniami widoków (kamera + contrler)\r\n// 3. Napisać funkcję do przejścia między ustawieniami widoków\r\n</script>\r\n\r\n\r\n<style scoped lang=\"scss\">\r\n.scene {\r\n    width: 100vw;\r\n    height: 100vh;\r\n}\r\n\r\n.info {\r\n    z-index: 999;\r\n    background-color: white;\r\n    border: 1px solid black;\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    text-align: left;\r\n}\r\n\r\n.container {\r\n    position: relative;\r\n}\r\n\r\n.return {\r\n    z-index: 999;\r\n    background-color: white;\r\n    border: 1px solid black;\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    text-align: left;\r\n    user-select: none;\r\n}\r\n\r\n.preloader {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: 998;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    color: white;\r\n}\r\n\r\n.blur {\r\n    filter: blur(20px);\r\n}\r\n\r\n.annotation {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 1;\r\n    padding: 1em;\r\n    width: 200px;\r\n    color: #fff;\r\n    background: rgba(0, 0, 0, 0.8);\r\n    border-radius: 0.5em;\r\n    font-size: 12px;\r\n    line-height: 1.2;\r\n    transition: opacity 0.5s;\r\n\r\n    &-content {\r\n        width: 100%;\r\n        position: relative;\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n\r\n    &-close {\r\n        position: absolute;\r\n        top: -5px;\r\n        right: 0;\r\n        cursor: pointer;\r\n\r\n        &:hover {\r\n            font-weight: bold;\r\n        }\r\n    }\r\n\r\n    &-title {\r\n        font-weight: bold;\r\n        margin-bottom: 20px;\r\n    }\r\n\r\n    &-desc {\r\n        margin-bottom: 20px;\r\n    }\r\n\r\n    &-button {\r\n        background-color: #00339a;\r\n        padding: 5px 10px;\r\n        cursor: pointer;\r\n        border-radius: 10px;\r\n        width: fit-content;\r\n        align-self: center;\r\n        opacity: 0.7;\r\n\r\n        &:hover {\r\n            opacity: 1;\r\n        }\r\n    }\r\n}\r\n</style>","import { onMounted, onUnmounted, Ref, ref} from 'vue';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport anime from 'animejs';\r\n\r\nexport default function createScene(sceneRef: Ref) {\r\n    const scene: THREE.Scene = new THREE.Scene();\r\n    const renderer: THREE.WebGLRenderer = new THREE.WebGLRenderer({ antialias: true });\r\n\r\n    const currentCamera = ref('global');\r\n    const camera = new THREE.PerspectiveCamera()\r\n\r\n    const camAndControls: any = {\r\n        global: {\r\n            camera: {\r\n                fov: 60,\r\n                aspect: sceneRef.value ? sceneRef.value.clientWidth / sceneRef.value.clientHeight : window.innerWidth / window.innerHeight,\r\n                near: 1,\r\n                far: 1000,\r\n                position: new THREE.Vector3(55, 55, 55),\r\n            },\r\n            controls: {\r\n                enableDamping: true,\r\n                dampingFactor: 0.05,\r\n                screenSpacePanning: false,\r\n                minDistance: 10,\r\n                maxDistance: 5000,\r\n                maxPolarAngle: Math.PI / 2,\r\n                enablePan: true,\r\n                position0: new THREE.Vector3(0, 0, 0),\r\n                target: new THREE.Vector3(0, 0, 0),\r\n                enableKeys: false,\r\n                keyPanSpeed: 7,\r\n                enableZoom: true,\r\n            }\r\n        },\r\n        person: {\r\n            camera: {\r\n                fov: 60,\r\n                aspect: sceneRef.value ? sceneRef.value.clientWidth / sceneRef.value.clientHeight : window.innerWidth / window.innerHeight,\r\n                near: 1,\r\n                far: 1000,\r\n                position: new THREE.Vector3(76, 1, 76),\r\n            },\r\n            controls: {\r\n                enableDamping: true,\r\n                dampingFactor: 0.05,\r\n                screenSpacePanning: false,\r\n                minDistance: 10,\r\n                maxDistance: 5000,\r\n                maxPolarAngle: Math.PI / 2,\r\n                enablePan: true,\r\n                position0: new THREE.Vector3(0, 0, 0),\r\n                target: new THREE.Vector3(75, 1, 75),\r\n                enableKeys: true,\r\n                keyPanSpeed: 70,\r\n                enableZoom: false,\r\n            }\r\n        },\r\n    }\r\n\r\n    const control = new OrbitControls(camera, renderer.domElement)\r\n\r\n    const animation = ref();\r\n    const animateFunctions: Array<Function> = [];\r\n    const rendererFunctions: Array<Function> = [];\r\n    const sceneClickFunctions: Array<Function> = [];\r\n    const clock = new THREE.Clock();\r\n\r\n    const onWindowResize = () => {\r\n        camera.aspect = window.innerWidth / window.innerHeight;\r\n        camera.updateProjectionMatrix();\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n    }\r\n\r\n    const sceneClick = () => {\r\n        sceneClickFunctions.forEach(func => {\r\n            func();\r\n        });\r\n    }\r\n\r\n    const setCamControlsSettings = (camAndControls: any, camera: THREE.PerspectiveCamera, control: OrbitControls, currentCamera: Ref) => {\r\n        const cameraSettings = camAndControls[currentCamera.value].camera\r\n        Object.keys(cameraSettings).forEach(key => {\r\n            if (key != 'position') {\r\n                (camera as any)[key] = cameraSettings[key]\r\n            } else {\r\n                camera[key].set(cameraSettings[key].x, cameraSettings[key].y, cameraSettings[key].z)\r\n            }\r\n        })\r\n\r\n        const controlsSettings = camAndControls[currentCamera.value].controls\r\n        Object.keys(controlsSettings).forEach(key => {\r\n            (control as any)[key] = controlsSettings[key]\r\n        })\r\n    }\r\n\r\n    const changeCamera = (startCamera: string, endCamera: string, duration: number) => {\r\n        control.enableRotate = false;\r\n        \r\n        animation.value = anime({\r\n            targets: camera.position,\r\n            easing: 'easeOutCirc',\r\n            duration: duration,\r\n            complete: () => {\r\n                animation.value = null;\r\n            },\r\n            x: camAndControls[endCamera].camera.position.x,\r\n            y: camAndControls[endCamera].camera.position.y,\r\n            z: camAndControls[endCamera].camera.position.z,\r\n        });\r\n\r\n        const saveStartTarget = {...camAndControls[startCamera].controls.target}\r\n        console.log(saveStartTarget)\r\n        animation.value = anime({\r\n            targets: control.target,\r\n            easing: 'easeOutCirc',\r\n            duration: duration * 1.1,\r\n            complete: () => {\r\n                animation.value = null;\r\n                control.enableRotate = true;\r\n                currentCamera.value = endCamera;\r\n                camAndControls[startCamera].controls.target = saveStartTarget;\r\n                camera.updateProjectionMatrix();\r\n            },\r\n            x: camAndControls[endCamera].controls.target.x,\r\n            y: camAndControls[endCamera].controls.target.y,\r\n            z: camAndControls[endCamera].controls.target.z,\r\n        });\r\n    }\r\n\r\n    onMounted( () => {\r\n        // Ustawienia kamer i sterów kamery\r\n        setCamControlsSettings(camAndControls, camera, control, currentCamera)\r\n\r\n        camera.updateProjectionMatrix();\r\n        renderer.setSize(sceneRef.value.clientWidth, sceneRef.value.clientHeight);\r\n        sceneRef.value.appendChild(renderer.domElement);\r\n\r\n        // zmiana rozmiaru sceny\r\n        window.addEventListener('resize', onWindowResize);\r\n\r\n        // Funkcja renderująca\r\n        const render = () => {\r\n            renderer.render(scene, camera);\r\n            rendererFunctions.forEach(func => {\r\n                func();\r\n            });\r\n        };\r\n\r\n        // Główna pętla sceny\r\n        const animate = () => {\r\n            requestAnimationFrame(animate);\r\n            (control as any).update(clock.getDelta());\r\n\r\n            animateFunctions.forEach(func => {\r\n                func();\r\n            });\r\n\r\n            render();\r\n        };\r\n\r\n        animate();\r\n    });\r\n\r\n    onUnmounted ( () => {\r\n        renderer.forceContextLoss();\r\n    });\r\n\r\n    return {\r\n        scene, renderer, camera,\r\n        currentCamera, changeCamera, control,\r\n        rendererFunctions, animateFunctions, animation,\r\n        sceneClick, sceneClickFunctions,\r\n        camAndControls\r\n    };\r\n}","import { onMounted } from 'vue';\r\nimport * as THREE from 'three';\r\n\r\n\r\nexport default function addLights(scene: THREE.Scene) {\r\n    onMounted( () => {\r\n        const ambientLight = new THREE.HemisphereLight(0xffffff, 0x222222, 1);\r\n        const mainLight = new THREE.DirectionalLight(0xffffff, 0.5);\r\n        mainLight.position.set(10, 10, 10);\r\n        scene.add(ambientLight, mainLight);\r\n    })\r\n\r\n    return {\r\n        \r\n    };\r\n}","import { onMounted } from 'vue';\r\nimport * as THREE from 'three';\r\n\r\nexport default function addBackground(scene: THREE.Scene) {\r\n\r\n    onMounted( () => {\r\n        const textureLoader = new THREE.TextureLoader();\r\n\r\n        const groundTexture = textureLoader.load('textures/grass.jpg');\r\n        groundTexture.wrapS = groundTexture.wrapT = THREE.RepeatWrapping;\r\n        groundTexture.repeat.set(25, 25);\r\n        groundTexture.anisotropy = 16;\r\n        groundTexture.encoding = THREE.sRGBEncoding;\r\n\r\n        const groundMaterial = new THREE.MeshLambertMaterial({ map: groundTexture });\r\n\r\n        const mesh = new THREE.Mesh(new THREE.PlaneBufferGeometry(500, 500), groundMaterial);\r\n        mesh.position.y = -1;\r\n        mesh.rotation.x = -Math.PI / 2;\r\n        mesh.receiveShadow = true;\r\n\r\n        scene.background = new THREE.Color(0xcce0ff);\r\n        //scene.background = new THREE.TextureLoader().load('img/background.jpg');\r\n        scene.fog = new THREE.Fog(0xcce0ff, 70, 200);\r\n        scene.add(mesh);\r\n    });\r\n}","import { onMounted, Ref } from 'vue';\r\nimport * as THREE from 'three';\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js';\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js';\r\nimport { SMAAPass } from 'three/examples/jsm/postprocessing/SMAAPass.js';\r\n\r\nexport default function postProduction(\r\n        scene: THREE.Scene,\r\n        camera: THREE.PerspectiveCamera,\r\n        currentCamera: Ref,\r\n        renderer: THREE.WebGLRenderer\r\n    ) {\r\n\r\n    onMounted( () => {\r\n        const composer = new EffectComposer(renderer);\r\n        const renderPass = new RenderPass(scene, camera);\r\n        composer.addPass(renderPass);\r\n        const pass = new SMAAPass(window.innerWidth * renderer.getPixelRatio(), window.innerHeight * renderer.getPixelRatio());\r\n        composer.addPass(pass);\r\n    });\r\n}","import { onMounted, reactive } from 'vue';\r\nimport * as THREE from 'three';\r\n\r\n\r\nexport default function addLoaderManager(manager: THREE.LoadingManager) {\r\n    const loading = reactive({\r\n        loaded: 0,\r\n        total: 0,\r\n        progress: 0,\r\n    })\r\n\r\n    onMounted( () => {\r\n        manager.onProgress = (item, loaded, total) => {\r\n            loading.loaded = loaded;\r\n            loading.total = total;\r\n            loading.progress = Math.round((loaded / total) * 10000) / 100;\r\n        };\r\n    })\r\n\r\n    return {\r\n        loading\r\n    };\r\n}","import { onMounted } from 'vue';\r\nimport * as THREE from 'three';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader';\r\n\r\nexport default function addBuilding(loader: GLTFLoader, scene: THREE.Scene, buildingPath: string) {\r\n    // Draco\r\n    const dracoLoader = new DRACOLoader();\r\n    dracoLoader.setDecoderPath('gltf/');\r\n    loader.setDRACOLoader(dracoLoader);\r\n\r\n    onMounted( () => {\r\n        loader.load(\r\n            buildingPath,\r\n            gltf => {\r\n                const model = gltf.scene;\r\n                scene.add(model);\r\n            },\r\n            undefined,\r\n            function(error) {\r\n                console.error(error);\r\n            },\r\n        );\r\n    })\r\n\r\n    return {\r\n        \r\n    };\r\n}","import { onMounted, onUnmounted } from 'vue';\r\nimport * as THREE from 'three';\r\n\r\n\r\nexport default function mouseRaycaster(\r\n        raycaster: THREE.Raycaster,\r\n        camera: THREE.PerspectiveCamera,\r\n    ) {\r\n\r\n    let touchScreen = false;\r\n    const mouse = new THREE.Vector2();\r\n    const onCursorMoveFunctions: Array<Function> = [];\r\n\r\n    const onCursorMove = (event: MouseEvent | TouchEvent) => {\r\n        if (touchScreen) {\r\n            mouse.x = ((event as TouchEvent).changedTouches[0].clientX / window.innerWidth) * 2 - 1;\r\n            mouse.y = -((event as TouchEvent).changedTouches[0].clientY / window.innerHeight) * 2 + 1;\r\n        } else {\r\n            mouse.x = ((event as MouseEvent).clientX / window.innerWidth) * 2 - 1;\r\n            mouse.y = -((event as MouseEvent).clientY / window.innerHeight) * 2 + 1;\r\n        }\r\n\r\n        raycaster.setFromCamera(mouse, camera);\r\n\r\n        onCursorMoveFunctions.forEach(func => {\r\n            func(raycaster);\r\n        });\r\n    }\r\n\r\n    onMounted( () => {\r\n        if ('ontouchstart' in document.documentElement) {\r\n            touchScreen = true;\r\n            window.addEventListener('touchend', onCursorMove, false);\r\n        } else {\r\n            window.addEventListener('mousemove', onCursorMove, false);\r\n        }\r\n    })\r\n\r\n    onUnmounted ( () => {\r\n        if (touchScreen) {\r\n            window.addEventListener('touchend', onCursorMove, false);\r\n        } else {\r\n            window.addEventListener('mousemove', onCursorMove, false);\r\n        }\r\n    });\r\n\r\n    return {\r\n        onCursorMoveFunctions\r\n    };\r\n}","import { onMounted, onUnmounted, Ref, ref } from 'vue';\r\nimport * as THREE from 'three';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport { Mesh, Material } from 'three';\r\n\r\nexport default function addClickableMockup(\r\n        loader: GLTFLoader,\r\n        scene: THREE.Scene,\r\n        renderer: THREE.WebGLRenderer,\r\n        camera: THREE.PerspectiveCamera,\r\n        currentCamera: Ref, selectable: Mesh[],\r\n        annotationRef: Ref, mockupPath: string\r\n    ) {\r\n\r\n    let currentHover: number | null = null;\r\n    const currentSelected = ref();\r\n\r\n    const resetOpacity = () => {\r\n        if (currentHover) {\r\n            const index = selectable.findIndex((mesh: Mesh) => mesh.id === currentHover);\r\n            if (currentHover != currentSelected.value) {\r\n                (selectable[index].material as Material).opacity = 0;\r\n            }\r\n            currentHover = null;\r\n        }\r\n    }\r\n\r\n    const mockupToClick = () => {\r\n        if (currentHover != currentSelected.value) {\r\n            currentSelected.value = currentHover;\r\n        }\r\n    }\r\n\r\n    const mockupToRaycast = (raycaster: THREE.Raycaster) => {\r\n        const intersects = raycaster.intersectObjects(selectable, true);\r\n        if (intersects && intersects[0]) {\r\n            resetOpacity();\r\n            ((intersects[0].object as Mesh).material as Material).opacity = 0.5;\r\n            ((intersects[0].object as Mesh).material as Material).transparent = true;\r\n            currentHover = intersects[0].object.id;\r\n        } else {\r\n            resetOpacity();\r\n            const index = selectable.findIndex((mesh: Mesh) => mesh.id === currentSelected.value);\r\n            for (const mesh in selectable) {\r\n                if (mesh != index.toString()) {\r\n                    (selectable[mesh].material as Material).opacity = 0;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const updateAnnotationPosition = () => {\r\n        if (currentSelected.value) {\r\n            const index = selectable.findIndex(mesh => mesh.id === currentSelected.value);\r\n            const vector = selectable[index].position.clone();\r\n            const canvas = renderer.domElement;\r\n\r\n            vector.project(camera);\r\n\r\n            vector.x = Math.round((0.5 + vector.x / 2) * (canvas.width / window.devicePixelRatio));\r\n            vector.y = Math.round((0.5 - vector.y / 2) * (canvas.height / window.devicePixelRatio));\r\n            annotationRef.value.style.top = `${vector.y}px`;\r\n            annotationRef.value.style.left = `${vector.x}px`;\r\n        }\r\n    }\r\n\r\n    const closeAnnotation = () => {\r\n        currentSelected.value = null;\r\n    }\r\n\r\n    onMounted( () => {\r\n        loader.load(\r\n            mockupPath,\r\n            gltf => {\r\n                const model = gltf.scene;\r\n                model.name = 'sciana';\r\n                scene.add(model);\r\n                for (const mesh in model.children) {\r\n                    (model.children[mesh] as Mesh).material = new THREE.MeshStandardMaterial({ color: 0xff0000, opacity: 0, transparent: true });\r\n                    selectable.push(model.children[mesh] as Mesh);\r\n                }\r\n            },\r\n            undefined,\r\n            function(error) {\r\n                console.error(error);\r\n            },\r\n        );\r\n    })\r\n\r\n    onUnmounted( () => {\r\n        currentSelected.value = null; // Inaczej nie zatrzymuje updateAnnotationPosition()\r\n    })\r\n\r\n    return {\r\n        currentSelected, mockupToRaycast,\r\n        mockupToClick, updateAnnotationPosition,\r\n        closeAnnotation\r\n    };\r\n}","import { onMounted, Ref } from 'vue';\r\nimport * as THREE from 'three';\r\nimport anime from 'animejs';\r\nimport { Mesh, Material, Vector3 } from 'three';\r\n\r\n\r\nexport default function addSprites(\r\n        scene: THREE.Scene,\r\n        camera: THREE.PerspectiveCamera,\r\n        control: any,\r\n        animation: Ref\r\n    ) {\r\n\r\n    let currentSelectedSprite: THREE.Intersection | null = null;\r\n\r\n    const sprites: { id: number; position: THREE.Vector3 }[] = [\r\n        {\r\n            id: 1,\r\n            position: new THREE.Vector3(50, 18, -12),\r\n        },\r\n        {\r\n            id: 2,\r\n            position: new THREE.Vector3(8, 20, -14),\r\n        },\r\n        {\r\n            id: 3,\r\n            position: new THREE.Vector3(10, 15, -8),\r\n        },\r\n        {\r\n            id: 4,\r\n            position: new THREE.Vector3(10, 5, -6),\r\n        },\r\n    ];\r\n    const addedSprites: THREE.Sprite[] = [];\r\n\r\n    const drawNumber = (number: string) => {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = 64;\r\n        canvas.height = 64;\r\n\r\n        const x = 32;\r\n        const y = 32;\r\n        const radius = 30;\r\n        const startAngle = 0;\r\n        const endAngle = Math.PI * 2;\r\n\r\n        const ctx = canvas.getContext('2d');\r\n        if (ctx != null) {\r\n            ctx.fillStyle = 'rgb(0, 0, 0)';\r\n            ctx.beginPath();\r\n            ctx.arc(x, y, radius, startAngle, endAngle);\r\n            ctx.fill();\r\n\r\n            ctx.strokeStyle = 'rgb(255, 255, 255)';\r\n            ctx.lineWidth = 3;\r\n            ctx.beginPath();\r\n            ctx.arc(x, y, radius, startAngle, endAngle);\r\n            ctx.stroke();\r\n\r\n            ctx.fillStyle = 'rgb(255, 255, 255)';\r\n            ctx.font = '32px sans-serif';\r\n            ctx.textAlign = 'center';\r\n            ctx.textBaseline = 'middle';\r\n            ctx.fillText(number, x, y);\r\n        }\r\n        return new THREE.CanvasTexture(canvas);\r\n    }\r\n\r\n    const addSprite = (number: string, position: THREE.Vector3) => {\r\n        const numberTexture = drawNumber(number);\r\n\r\n        const spriteMaterialFront = new THREE.SpriteMaterial({\r\n            map: numberTexture,\r\n        });\r\n\r\n        const spriteMaterialBack = new THREE.SpriteMaterial({\r\n            map: numberTexture,\r\n            transparent: true,\r\n            depthTest: false,\r\n            opacity: 0.3,\r\n        });\r\n\r\n        const spriteFront = new THREE.Sprite(spriteMaterialFront);\r\n        const spriteBack = new THREE.Sprite(spriteMaterialBack);\r\n\r\n        spriteFront.position.copy(position);\r\n        spriteBack.position.copy(position);\r\n\r\n        spriteFront.userData.frontID = spriteFront.id;\r\n        spriteFront.userData.backID = spriteBack.id;\r\n        spriteBack.userData.frontID = spriteFront.id;\r\n        spriteBack.userData.backID = spriteBack.id;\r\n\r\n        addedSprites.push(spriteFront, spriteBack);\r\n        scene.add(spriteFront, spriteBack);\r\n    }\r\n\r\n    const addAllSprites = () => {\r\n        for (const key in sprites) {\r\n            addSprite(sprites[key].id.toString(), sprites[key].position);\r\n        }\r\n    }\r\n\r\n    const spritesToRaycast = (raycaster: THREE.Raycaster) => {\r\n        const spritesIntersects = raycaster.intersectObjects(addedSprites, true);\r\n        if (spritesIntersects && spritesIntersects[0]) {\r\n            ((spritesIntersects[0].object as Mesh).material as Material).opacity = 0.1;\r\n            currentSelectedSprite = spritesIntersects[0];\r\n        } else {\r\n            if (currentSelectedSprite) {\r\n                ((currentSelectedSprite.object as Mesh).material as Material).opacity = 0.7;\r\n                currentSelectedSprite = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    const moveCameraToPosition = (newPosition: Vector3, duration: number, oncomplete?: Function) => {\r\n        const currentAngle = control.getAzimuthalAngle();\r\n        control.maxAzimuthAngle = currentAngle;\r\n        control.minAzimuthAngle = currentAngle;\r\n        control.enableRotate = false;\r\n\r\n        const distance = camera.position.distanceTo(newPosition)\r\n        const offset = 1\r\n\r\n        const newPositionX = newPosition.clone()\r\n        const newPositionY = newPosition.clone()\r\n        const newPositionZ = newPosition.clone()\r\n\r\n        newPositionX.x -= offset\r\n        newPositionY.y -= offset\r\n        newPositionZ.z -= offset\r\n\r\n        const distanceX = camera.position.distanceTo(newPositionX)\r\n        const distanceY = camera.position.distanceTo(newPositionY)\r\n        const distanceZ = camera.position.distanceTo(newPositionZ)\r\n\r\n        const newX = distanceX > distance ? newPosition.x + offset : newPosition.x - offset\r\n        const newY = distanceY > distance ? newPosition.y + offset : newPosition.y - offset\r\n        const newZ = distanceZ > distance ? newPosition.z + offset : newPosition.z - offset\r\n\r\n        animation.value = anime({\r\n            targets: camera.position,\r\n            easing: 'easeOutCirc',\r\n            duration: duration,\r\n            complete: () => {\r\n                animation.value = null;\r\n            },\r\n            x: newX,\r\n            y: newY,\r\n            z: newZ\r\n        });\r\n\r\n        animation.value = anime({\r\n            targets: control.target,\r\n            easing: 'easeOutCirc',\r\n            duration: duration + 10,\r\n            complete: () => {\r\n                animation.value = null;\r\n                control.maxAzimuthAngle = Infinity;\r\n                control.minAzimuthAngle = -Infinity;\r\n                control.enableRotate = true;\r\n                if (oncomplete != undefined) {\r\n                    oncomplete();\r\n                }\r\n            },\r\n            x: newPosition.x,\r\n            y: newPosition.y,\r\n            z: newPosition.z,\r\n        });\r\n    }\r\n\r\n    const spritesToClick = () => {\r\n        if (currentSelectedSprite) {\r\n            moveCameraToPosition(currentSelectedSprite.object.position, 1500);\r\n        }\r\n    }\r\n\r\n    onMounted( () => {\r\n        addAllSprites();\r\n    });\r\n\r\n    return {\r\n        spritesToRaycast, spritesToClick\r\n    };\r\n}","\r\nimport { ref } from 'vue'\r\nimport * as THREE from 'three';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport { Mesh } from 'three';\r\n\r\n// Import hooks\r\nimport createScene from '../hooks/createScene';\r\nimport addLights from '../hooks/addLights';\r\nimport addBackground from '../hooks/addBackground';\r\nimport postProduction from '../hooks/postProduction';\r\nimport addLoaderManager from '../hooks/addLoaderManager';\r\nimport addBuilding from '../hooks/addBuilding';\r\nimport mouseRaycaster from '../hooks/mouseRaycaster';\r\nimport addClickableMockup from '../hooks/addClickableMockup';\r\nimport addSprites from '../hooks/addSprites';\r\n\r\nexport default {\r\n    setup() {\r\n        // Dodaj scenę\r\n        const sceneRef = ref(null);\r\n        const {\r\n            scene,renderer, camera, currentCamera,\r\n            changeCamera, control, rendererFunctions,\r\n            animation, sceneClick, sceneClickFunctions, camAndControls\r\n        } = createScene(sceneRef);\r\n\r\n        // Pokaż osie x,y,z\r\n        scene.add(new THREE.AxesHelper(100));\r\n\r\n        // Dodaj światło\r\n        addLights(scene)\r\n\r\n        // Dodaj tło\r\n        addBackground(scene)\r\n\r\n        // Dodaj postprodukcję\r\n        postProduction(scene, camera, currentCamera, renderer)\r\n\r\n        // Dodaj manager ładowania\r\n        const manager = new THREE.LoadingManager();\r\n        const { loading } = addLoaderManager(manager)\r\n\r\n        // Załaduj budynek\r\n        const loader = new GLTFLoader(manager);\r\n        addBuilding(loader, scene, 'develop_house/untitledDraco.gltf')\r\n        //addBuilding(loader, scene, 'develop_house/modelDraco.gltf')\r\n\r\n        // Funkcje raycastera\r\n        const raycaster = new THREE.Raycaster();\r\n        const { onCursorMoveFunctions } = mouseRaycaster(raycaster, camera)\r\n\r\n        // Załaduj klikalny obiekt\r\n        const selectable: Mesh[] = [];\r\n        const annotationRef = ref(null)\r\n        const {\r\n            currentSelected, mockupToRaycast, mockupToClick,\r\n            updateAnnotationPosition, closeAnnotation\r\n        } = addClickableMockup(loader, scene, renderer, camera, currentCamera, selectable, annotationRef, 'develop_house/sciana.gltf')\r\n\r\n        onCursorMoveFunctions.push(mockupToRaycast)\r\n        sceneClickFunctions.push(mockupToClick)\r\n        rendererFunctions.push(updateAnnotationPosition)\r\n\r\n        // Dodaj klikalne punkty\r\n        const { spritesToRaycast, spritesToClick } = addSprites(scene, camera, control, animation)\r\n        onCursorMoveFunctions.push(spritesToRaycast)\r\n        sceneClickFunctions.push(spritesToClick)\r\n\r\n        return {\r\n            sceneRef, annotationRef, changeCamera,\r\n            currentCamera, closeAnnotation, currentSelected,\r\n            sceneClick, loading, camAndControls\r\n        }\r\n    }\r\n}\r\n\r\n// 1. Ustawić jedną kamerę i jeden kontroler\r\n// 2. Utworzyc obiekt z ustawieniami widoków (kamera + contrler)\r\n// 3. Napisać funkcję do przejścia między ustawieniami widoków\r\n","import { render } from \"./Scene.vue?vue&type=template&id=232eb97b&scoped=true&bindings={\\\"sceneRef\\\":\\\"setup\\\",\\\"annotationRef\\\":\\\"setup\\\",\\\"changeCamera\\\":\\\"setup\\\",\\\"currentCamera\\\":\\\"setup\\\",\\\"closeAnnotation\\\":\\\"setup\\\",\\\"currentSelected\\\":\\\"setup\\\",\\\"sceneClick\\\":\\\"setup\\\",\\\"loading\\\":\\\"setup\\\",\\\"camAndControls\\\":\\\"setup\\\"}\"\nimport script from \"./Scene.vue?vue&type=script&lang=ts\"\nexport * from \"./Scene.vue?vue&type=script&lang=ts\"\n\nimport \"./Scene.vue?vue&type=style&index=0&id=232eb97b&scoped=true&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-232eb97b\"\n\nexport default script","\nimport { Options, Vue } from 'vue-class-component';\nimport Scene from '../components/Scene.vue';\n\n@Options({\n  components: {\n    Scene,\n  },\n})\nexport default class Home extends Vue {}\n","import { render } from \"./Home.vue?vue&type=template&id=20605aa9&bindings={}\"\nimport script from \"./Home.vue?vue&type=script&lang=ts\"\nexport * from \"./Home.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import { createRouter, createWebHistory, RouteRecordRaw } from 'vue-router'\nimport Home from '../views/Home.vue'\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: '/',\n    name: 'Home',\n    component: Home\n  },\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\nexport default router\n","import { createStore } from 'vuex'\n\nexport default createStore({\n  state: {\n  },\n  mutations: {\n  },\n  actions: {\n  },\n  modules: {\n  }\n})\n","import { createApp } from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport store from './store'\r\n\r\ncreateApp(App).use(store).use(router).mount('#app')\r\n"],"sourceRoot":""}